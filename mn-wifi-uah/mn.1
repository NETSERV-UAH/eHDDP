.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.6.
.TH MN "1" "November 2020" "mn 2.5" "User Commands"
.SH NAME
mn \- create a Mininet network.
.SH SYNOPSIS
.B mn
[\fI\,options\/\fR]
.SH DESCRIPTION
(type mn \fB\-h\fR for details)
.PP
The mn utility creates Mininet network from the command line. It can create
parametrized topologies, invoke the Mininet CLI, and run tests.
.SH OPTIONS
.TP
\fB\-h\fR, \fB\-\-help\fR
show this help message and exit
.TP
\fB\-\-switch\fR=\fI\,SWITCH\/\fR
default|ivs|lxbr|ovs|ovsbr|ovsk|p4stratumswitch|p4swit
ch|user[,param=value...] ovs=OVSSwitch
default=OVSSwitch ovsk=OVSSwitch p4switch=P4Switch
lxbr=LinuxBridge user=UserSwitch ivs=IVSSwitch
ovsbr=OVSBridge p4stratumswitch=P4StratumSwitch
.TP
\fB\-\-ap\fR=\fI\,AP\/\fR
default|lxbr|ovs|ovsbr|ovsk|p4ap|p4stratumap|user[,par
am=value...] ovs=OVSAP p4stratumap=P4StratumAP
default=OVSAP ovsk=OVSAP p4ap=P4AP lxbr=LinuxBridge
user=UserAP ovsbr=OVSBridge
.TP
\fB\-\-host\fR=\fI\,HOST\/\fR
cfs|proc|rt[,param=value...]
rt=CPULimitedHost{'sched': 'rt'} proc=Host
cfs=CPULimitedHost{'sched': 'cfs'}
.TP
\fB\-\-station\fR=\fI\,STATION\/\fR
cfs|proc|rt[,param=value...]
rt=CPULimitedStation{'sched': 'rt'} proc=Station
cfs=CPULimitedStation{'sched': 'cfs'}
.TP
\fB\-\-controller\fR=\fI\,CONTROLLER\/\fR
default|none|nox|ovsc|ref|remote|ryu[,param=value...]
ovsc=OVSController none=NullController
remote=RemoteController default=DefaultController
nox=NOX ryu=Ryu ref=Controller
.TP
\fB\-\-link\fR=\fI\,LINK\/\fR
default|ovs|tc|tcu|wmediumd|wtc[,param=value...]
ovs=OVSLink default=Link wmediumd=wmediumd tcu=TCULink
wtc=WirelessLink tc=TCLink
.TP
\fB\-\-topo\fR=\fI\,TOPO\/\fR
linear|minimal|reversed|single|torus|tree[,param=value
\&...] linear=LinearTopo torus=TorusTopo tree=TreeTopo
single=SingleSwitchTopo
reversed=SingleSwitchReversedTopo minimal=MinimalTopo
.TP
\fB\-\-client\-isolation\fR
prevent low\-level bridging of frames between
associated stations in the BSS
.TP
\fB\-w\fR, \fB\-\-wifi\fR
activate wifi
.TP
\fB\-d\fR, \fB\-\-docker\fR
for docker environment
.TP
\fB\-\-container\fR=\fI\,CONTAINER\/\fR
docker: container name
.TP
\fB\-\-json\-file\fR=\fI\,JSON_FILE\/\fR
json file dir
.TP
\fB\-\-ssh\-user\fR=\fI\,SSH_USER\/\fR
docker: ssh username
.TP
\fB\-\-plot\fR
plot 2D graph
.TP
\fB\-\-plot3d\fR
plot 3D graph
.TP
\fB\-\-channel\fR=\fI\,CHANNEL\/\fR
wireless channel configuration
.TP
\fB\-\-band\fR=\fI\,BAND\/\fR
wireless bandwidth channel
.TP
\fB\-\-freq\fR=\fI\,FREQ\/\fR
wireless frequency
.TP
\fB\-\-mode\fR=\fI\,MODE\/\fR
wireless mode configuration
.TP
\fB\-\-ssid\fR=\fI\,SSID\/\fR
wireless ssid configuration
.TP
\fB\-c\fR, \fB\-\-clean\fR
clean and exit
.TP
\fB\-\-custom\fR=\fI\,CUSTOM\/\fR
read custom classes or params from .py file(s)
.TP
\fB\-\-test\fR=\fI\,TEST\/\fR
none|build|all|iperf|pingpair|iperfudp|pingall
.TP
\fB\-x\fR, \fB\-\-xterms\fR
spawn xterms for each node
.TP
\fB\-i\fR IPBASE, \fB\-\-ipbase\fR=\fI\,IPBASE\/\fR
base IP address for hosts
.TP
\fB\-\-mac\fR
automatically set host MACs
.TP
\fB\-\-position\fR
automatically set node Positions
.TP
\fB\-\-arp\fR
set all\-pairs ARP entries
.TP
\fB\-v\fR VERBOSITY, \fB\-\-verbosity\fR=\fI\,VERBOSITY\/\fR
info|warning|critical|error|debug|output
.TP
\fB\-\-innamespace\fR
sw and ctrl in namespace?
.TP
\fB\-\-listenport\fR=\fI\,LISTENPORT\/\fR
base port for passive switch listening
.TP
\fB\-\-nolistenport\fR
don't use passive listening port
.TP
\fB\-\-pre\fR=\fI\,PRE\/\fR
CLI script to run before tests
.TP
\fB\-\-post\fR=\fI\,POST\/\fR
CLI script to run after tests
.TP
\fB\-\-pin\fR
pin hosts to CPU cores (requires \fB\-\-host\fR cfs or \fB\-\-host\fR
rt)
.TP
\fB\-\-nat\fR
adds a NAT to the topology that connects Mininet hosts
to the physical network. Warning: This may route any
traffic on the machine that uses Mininet's IP subnet
into the Mininet network. If you need to change
Mininet's IP subnet, see the \fB\-\-ipbase\fR option.
.TP
\fB\-\-version\fR
prints the version and exits
.TP
\fB\-\-cluster\fR=\fI\,server1\/\fR,server2...
run on multiple servers (experimental!)
.TP
\fB\-\-placement\fR=\fI\,block\/\fR|random
node placement for \fB\-\-cluster\fR (experimental!)
